version: "3"
# docker-compose --profile all down --remove-orphans
# docker-compose --profile all up -d
# docker-compose --profile nodeserver up -d
# docker-compose logs -f nodeserver
# docker-compose logs -f nginx

# docker-compose ps

# ssh root@localhost -p 2219

networks:
  network_develop:
    name: network_develop
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/24

services:
  nginx:
    profiles: [ "all" ]
    image: gcr.io/ejfexperiments/nginx:latest
    ports:
      - "80:80"
      - "443:443"
      - "8081:8081"
      - "4200:4200"
    volumes:
      - ${WORKSPACE}/workspace/nginx/reverse_proxy.conf:/etc/nginx/conf.d/default.conf
    restart: always
    depends_on:
      nodeserver:
        condition: service_healthy
    networks:
      network_develop:
        aliases:
          - nginx

  nodeserver:
    profiles: [ "all", "nodeserver" ]
    image: ${IMAGE_FLOWCHART_SERVER}
    environment:
      PORT: "8081"
      ENV: "pro"
      GOOGLE_APPLICATION_CREDENTIALS: ${GCP_SERVICE_ACCOUNT_JSON}
      FACE_SERVER: ""
      TRAIN_SERVER: ""
      WORKSPACE: "/tmp/app"
      USE_SECURE: ${USE_SECURE}
      MILVUS_URI: ${MILVUS_URI}
      MONGO_USR: ${MONGO_USR}
      MONGO_PASS: ${MONGO_PASS}
      MONGO_URI: ${MONGO_URI}
      MINIO_USR: ${MINIO_USR}
      MINIO_PASS: ${MINIO_PASS}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_URI: ${MINIO_URI}
    ports:
      - "2219:22"
      #- "8081:8081"
      #- "4200:4200"
    volumes:
      - "${FOLDER_CODE_CORE}/flowcharts:/tmp/app/flowcharts"
      - "${FOLDER_CODE_CORE}/srcJs:/tmp/app/srcJs"
      - "${FOLDER_CODE_CORE}/srv:/tmp/app/srv"
      - "${FOLDER_CODE_CORE}/app.mjs:/tmp/app/app.mjs"
      - "${FOLDER_CODE_CORE}/rundev.sh:/tmp/app/rundev.sh"
      - "${FOLDER_CODE_CORE}/package.json:/tmp/app/package.json"
      - "${FOLDER_CODE_CORE}/package-lock.json:/tmp/app/package-lock.json"
    networks:
      network_develop:
        aliases:
          - nodeserver
    healthcheck:
      test: curl --fail http://nodeserver:4200/assets/json/topApps.json || exit 1
      interval: 1s
      timeout: 1s
      retries: 30
      start_period: 1s
    command: sh /tmp/app/rundev.sh

  mongodb:
    profiles: [ "all" ]
    image: mongodb/mongodb-atlas-local
    command: sh /tmp/mongo/run.sh
    #user: "systemd-coredump"
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=${MONGO_USR}
      - MONGODB_INITDB_ROOT_PASSWORD=${MONGO_PASS}
    ports:
      - 27017:27017
    volumes:
      - ${WORKSPACE}/workspace/mongo/run.sh:/tmp/mongo/run.sh
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      network_develop:
        aliases:
          - mongodb
    healthcheck:
      test: test $$(mongosh --port 30001 --quiet --eval "try {rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongo:30001\"}]})} catch(e) {rs.status().ok}") -eq 1
      interval: 10s
      start_period: 30s
      retries: 20
